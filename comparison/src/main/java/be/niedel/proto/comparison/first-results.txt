"C:\Program Files\Java\jdk-14.0.1\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin" -Dfile.encoding=UTF-8 -classpath D:\repos\proto\comparison\target\classes;D:\repos\proto\employment-service-contract\target\classes;C:\Users\niels\.m2\repository\com\google\protobuf\protobuf-java\3.13.0\protobuf-java-3.13.0.jar;C:\Users\niels\.m2\repository\com\google\protobuf\protobuf-java-util\3.13.0\protobuf-java-util-3.13.0.jar;C:\Users\niels\.m2\repository\com\google\guava\guava\29.0-android\guava-29.0-android.jar;C:\Users\niels\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\niels\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\niels\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\niels\.m2\repository\org\checkerframework\checker-compat-qual\2.5.5\checker-compat-qual-2.5.5.jar;C:\Users\niels\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\niels\.m2\repository\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;C:\Users\niels\.m2\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;C:\Users\niels\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\niels\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\niels\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\niels\.m2\repository\org\openjdk\jmh\jmh-core\1.25.2\jmh-core-1.25.2.jar;C:\Users\niels\.m2\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;C:\Users\niels\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar be.niedel.proto.comparison.serialization.DeserializationComparisonApplication
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/C:/Users/niels/.m2/repository/org/openjdk/jmh/jmh-core/1.25.2/jmh-core-1.25.2.jar) to field java.io.PrintStream.charOut
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeProtoEncodedMessage

# Run progress: 0,00% complete, ETA 00:06:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 951,475 ops/ms
Iteration   1: 979,985 ops/ms
Iteration   2: 980,605 ops/ms

# Run progress: 8,33% complete, ETA 00:05:43
# Fork: 1 of 1
# Warmup Iteration   1: 941,439 ops/ms
Iteration   1: 959,693 ops/ms
Iteration   2: 962,532 ops/ms


Result "be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeProtoEncodedMessage":
  961,113 ops/ms


# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark

# Run progress: 16,67% complete, ETA 00:05:10
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 149,341 ops/ms
Iteration   1: 154,681 ops/ms
Iteration   2: 154,903 ops/ms

# Run progress: 25,00% complete, ETA 00:04:39
# Fork: 1 of 1
# Warmup Iteration   1: 147,280 ops/ms
Iteration   1: 154,664 ops/ms
Iteration   2: 156,451 ops/ms


Result "be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark":
  155,557 ops/ms


# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeProtoEncodedMessage

# Run progress: 33,33% complete, ETA 00:04:08
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0,001 ms/op
Iteration   1: 0,001 ms/op
Iteration   2: 0,001 ms/op

# Run progress: 41,67% complete, ETA 00:03:37
# Fork: 1 of 1
# Warmup Iteration   1: 0,001 ms/op
Iteration   1: 0,001 ms/op
Iteration   2: 0,001 ms/op


Result "be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeProtoEncodedMessage":
  0,001 ms/op


# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark

# Run progress: 50,00% complete, ETA 00:03:06
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0,007 ms/op
Iteration   1: 0,006 ms/op
Iteration   2: 0,007 ms/op

# Run progress: 58,33% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 0,007 ms/op
Iteration   1: 0,007 ms/op
Iteration   2: 0,007 ms/op


Result "be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark":
  0,007 ms/op


# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeProtoEncodedMessage

# Run progress: 66,66% complete, ETA 00:02:04
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0,001 ±(99.9%) 0,001 ms/op
Iteration   1: 0,001 ±(99.9%) 0,001 ms/op
                 deserializeProtoEncodedMessage·p0.00:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.50:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.90:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.95:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.99:   0,002 ms/op
                 deserializeProtoEncodedMessage·p0.999:  0,015 ms/op
                 deserializeProtoEncodedMessage·p0.9999: 0,034 ms/op
                 deserializeProtoEncodedMessage·p1.00:   1,280 ms/op

Iteration   2: 0,001 ±(99.9%) 0,001 ms/op
                 deserializeProtoEncodedMessage·p0.00:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.50:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.90:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.95:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.99:   0,002 ms/op
                 deserializeProtoEncodedMessage·p0.999:  0,014 ms/op
                 deserializeProtoEncodedMessage·p0.9999: 0,029 ms/op
                 deserializeProtoEncodedMessage·p1.00:   1,208 ms/op


# Run progress: 75,00% complete, ETA 00:01:33
# Fork: 1 of 1
# Warmup Iteration   1: 0,001 ±(99.9%) 0,001 ms/op
Iteration   1: 0,001 ±(99.9%) 0,001 ms/op
                 deserializeProtoEncodedMessage·p0.00:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.50:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.90:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.95:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.99:   0,002 ms/op
                 deserializeProtoEncodedMessage·p0.999:  0,014 ms/op
                 deserializeProtoEncodedMessage·p0.9999: 0,029 ms/op
                 deserializeProtoEncodedMessage·p1.00:   1,358 ms/op

Iteration   2: 0,001 ±(99.9%) 0,001 ms/op
                 deserializeProtoEncodedMessage·p0.00:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.50:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.90:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.95:   0,001 ms/op
                 deserializeProtoEncodedMessage·p0.99:   0,002 ms/op
                 deserializeProtoEncodedMessage·p0.999:  0,014 ms/op
                 deserializeProtoEncodedMessage·p0.9999: 0,030 ms/op
                 deserializeProtoEncodedMessage·p1.00:   1,284 ms/op



Result "be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeProtoEncodedMessage":
  N = 609901
  mean =      0,001 ±(99.9%) 0,001 ms/op

  Histogram, ms/op:
    [0,000, 0,125) = 609878
    [0,125, 0,250) = 2
    [0,250, 0,375) = 0
    [0,375, 0,500) = 0
    [0,500, 0,625) = 0
    [0,625, 0,750) = 0
    [0,750, 0,875) = 1
    [0,875, 1,000) = 1
    [1,000, 1,125) = 3
    [1,125, 1,250) = 8
    [1,250, 1,375) = 8
    [1,375, 1,500) = 0
    [1,500, 1,625) = 0
    [1,625, 1,750) = 0
    [1,750, 1,875) = 0

  Percentiles, ms/op:
      p(0,0000) =      0,001 ms/op
     p(50,0000) =      0,001 ms/op
     p(90,0000) =      0,001 ms/op
     p(95,0000) =      0,001 ms/op
     p(99,0000) =      0,002 ms/op
     p(99,9000) =      0,014 ms/op
     p(99,9900) =      0,030 ms/op
     p(99,9990) =      1,275 ms/op
     p(99,9999) =      1,358 ms/op
    p(100,0000) =      1,358 ms/op


# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark

# Run progress: 83,33% complete, ETA 00:01:02
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0,008 ±(99.9%) 0,002 ms/op
Iteration   1: 0,007 ±(99.9%) 0,001 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.00:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.50:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.90:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.95:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.99:   0,013 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.999:  0,034 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.9999: 1,188 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p1.00:   1,380 ms/op

Iteration   2: 0,007 ±(99.9%) 0,001 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.00:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.50:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.90:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.95:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.99:   0,012 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.999:  0,035 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.9999: 1,174 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p1.00:   1,458 ms/op


# Run progress: 91,66% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 0,008 ±(99.9%) 0,002 ms/op
Iteration   1: 0,007 ±(99.9%) 0,001 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.00:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.50:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.90:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.95:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.99:   0,012 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.999:  0,034 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.9999: 1,200 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p1.00:   1,354 ms/op

Iteration   2: 0,007 ±(99.9%) 0,001 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.00:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.50:   0,006 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.90:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.95:   0,007 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.99:   0,012 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.999:  0,034 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p0.9999: 1,153 ms/op
                 deserializeUtf8EncodedJSONMessageBenchmark·p1.00:   1,423 ms/op



Result "be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark":
  N = 388684
  mean =      0,007 ±(99.9%) 0,001 ms/op

  Histogram, ms/op:
    [0,000, 0,125) = 388609
    [0,125, 0,250) = 15
    [0,250, 0,375) = 0
    [0,375, 0,500) = 0
    [0,500, 0,625) = 0
    [0,625, 0,750) = 1
    [0,750, 0,875) = 0
    [0,875, 1,000) = 1
    [1,000, 1,125) = 9
    [1,125, 1,250) = 28
    [1,250, 1,375) = 20
    [1,375, 1,500) = 1
    [1,500, 1,625) = 0
    [1,625, 1,750) = 0
    [1,750, 1,875) = 0

  Percentiles, ms/op:
      p(0,0000) =      0,006 ms/op
     p(50,0000) =      0,006 ms/op
     p(90,0000) =      0,007 ms/op
     p(95,0000) =      0,007 ms/op
     p(99,0000) =      0,012 ms/op
     p(99,9000) =      0,034 ms/op
     p(99,9900) =      1,169 ms/op
     p(99,9990) =      1,316 ms/op
     p(99,9999) =      1,423 ms/op
    p(100,0000) =      1,423 ms/op


# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, single-shot each
# Measurement: 2 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeProtoEncodedMessage

# Run progress: 100,00% complete, ETA 00:00:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 20,201 ms/op
Iteration   1: 0,208 ms/op
Iteration   2: 0,119 ms/op

# Run progress: 100,00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 20,055 ms/op
Iteration   1: 0,329 ms/op
Iteration   2: 0,126 ms/op



# JMH version: 1.25.2
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: C:\Program Files\Java\jdk-14.0.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar=58858:C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, single-shot each
# Measurement: 2 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: be.niedel.proto.comparison.serialization.DeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark

# Run progress: 100,00% complete, ETA 00:00:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 121,240 ms/op
Iteration   1: 0,511 ms/op
Iteration   2: 0,439 ms/op

# Run progress: 100,00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 119,815 ms/op
Iteration   1: 0,534 ms/op
Iteration   2: 0,474 ms/op



# Run complete. Total time: 00:06:16

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                                                                         Mode     Cnt    Score    Error   Units
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage                                                                  thrpt       2  961,113           ops/ms
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark                                                      thrpt       2  155,557           ops/ms
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage                                                                   avgt       2    0,001            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark                                                       avgt       2    0,007            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage                                                                 sample  609901    0,001 ±  0,001   ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p0.00                            sample            0,001            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p0.50                            sample            0,001            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p0.90                            sample            0,001            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p0.95                            sample            0,001            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p0.99                            sample            0,002            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p0.999                           sample            0,014            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p0.9999                          sample            0,030            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage:deserializeProtoEncodedMessage·p1.00                            sample            1,358            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark                                                     sample  388684    0,007 ±  0,001   ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p0.00    sample            0,006            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p0.50    sample            0,006            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p0.90    sample            0,007            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p0.95    sample            0,007            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p0.99    sample            0,012            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p0.999   sample            0,034            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p0.9999  sample            1,169            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark:deserializeUtf8EncodedJSONMessageBenchmark·p1.00    sample            1,423            ms/op
SerializationAndDeserializationComparisonService.deserializeProtoEncodedMessage                                                                     ss       2    0,228            ms/op
SerializationAndDeserializationComparisonService.deserializeUtf8EncodedJSONMessageBenchmark                                                         ss       2    0,504            ms/op

Process finished with exit code 0
